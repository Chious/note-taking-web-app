{
  "openapi": "3.0.0",
  "info": {
    "title": "Note Taking App API",
    "version": "1.0.0",
    "description": "A comprehensive note-taking application with user authentication and note management features",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    },
    {
      "url": "https://your-domain.com/api",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication. Format: Bearer <token>"
      }
    },
    "schemas": {
      "object": {},
      "HealthResponseSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Service status"
          },
          "db": {
            "type": "string",
            "description": "Database connection status"
          },
          "timestamp": {
            "type": "string",
            "description": "Response timestamp"
          },
          "data": {
            "type": "object",
            "properties": {
              "userCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of users in database"
              },
              "noteCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of notes in database"
              }
            },
            "required": [
              "userCount",
              "noteCount"
            ],
            "nullable": true,
            "description": "Additional data"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if any"
          }
        },
        "required": [
          "status",
          "db",
          "timestamp"
        ]
      },
      "LoginRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "token",
          "user",
          "user"
        ]
      },
      "RegisterRequestSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "User password (minimum 8 characters)"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "user",
          "user"
        ]
      },
      "AuthTestResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "userId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Authenticated user ID"
          }
        },
        "required": [
          "message",
          "userId"
        ]
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Unique identifier for the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User registration timestamp"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt"
        ]
      },
      "ErrorResponseSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name"
                },
                "message": {
                  "type": "string",
                  "description": "Error message for the field"
                }
              },
              "required": [
                "field",
                "message"
              ]
            },
            "nullable": true,
            "description": "Detailed validation errors (when applicable)"
          }
        },
        "required": [
          "error"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Unique identifier for the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "User registration timestamp"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "description": "User password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "token": {
            "type": "string",
            "description": "JWT authentication token"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "token",
          "user",
          "user"
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "User password (minimum 8 characters)"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "user",
          "user"
        ]
      },
      "AuthTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          },
          "userId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Authenticated user ID"
          }
        },
        "required": [
          "message",
          "userId"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Field name"
                },
                "message": {
                  "type": "string",
                  "description": "Error message for the field"
                }
              },
              "required": [
                "field",
                "message"
              ]
            },
            "nullable": true,
            "description": "Detailed validation errors (when applicable)"
          }
        },
        "required": [
          "error"
        ]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Service status"
          },
          "db": {
            "type": "string",
            "description": "Database connection status"
          },
          "timestamp": {
            "type": "string",
            "description": "Response timestamp"
          },
          "data": {
            "type": "object",
            "properties": {
              "userCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of users in database"
              },
              "noteCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of notes in database"
              }
            },
            "required": [
              "userCount",
              "noteCount"
            ],
            "nullable": true,
            "description": "Additional data"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if any"
          }
        },
        "required": [
          "status",
          "db",
          "timestamp"
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request parameters"
                },
                "code": {
                  "type": "string",
                  "example": "400"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Authentication required"
                },
                "code": {
                  "type": "string",
                  "example": "401"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                },
                "code": {
                  "type": "string",
                  "example": "403"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource not found"
                },
                "code": {
                  "type": "string",
                  "example": "404"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Resource already exists"
                },
                "code": {
                  "type": "string",
                  "example": "409"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "An unexpected error occurred"
                },
                "code": {
                  "type": "string",
                  "example": "500"
                }
              }
            }
          }
        }
      }
    }
  },
  "outputDir": "./public",
  "paths": {
    "/docs": {
      "get": {
        "operationId": "get-docs",
        "summary": "@response 200:object:OpenAPI specification",
        "description": "",
        "tags": [
          "Docs"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OpenAPI specification",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "get-health",
        "summary": "@response HealthResponseSchema:Service healthy",
        "description": "",
        "tags": [
          "Health"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Service status"
                    },
                    "db": {
                      "type": "string",
                      "description": "Database connection status"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "Response timestamp"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userCount": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Number of users in database"
                        },
                        "noteCount": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "Number of notes in database"
                        }
                      },
                      "required": [
                        "userCount",
                        "noteCount"
                      ],
                      "nullable": true,
                      "description": "Additional data"
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Error message if any"
                    }
                  },
                  "required": [
                    "status",
                    "db",
                    "timestamp"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/login": {
      "post": {
        "operationId": "post-login",
        "summary": "@body LoginRequestSchema",
        "description": "",
        "tags": [
          "Login"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 1,
                    "description": "User password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT authentication token"
                    },
                    "user": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "token",
                    "user",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/register": {
      "post": {
        "operationId": "post-register",
        "summary": "@body RegisterRequestSchema",
        "description": "",
        "tags": [
          "Register"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "User password (minimum 8 characters)"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    },
                    "user": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "user",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseSchema"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/test-auth": {
      "get": {
        "operationId": "get-test-auth",
        "summary": "@auth bearer",
        "description": "",
        "tags": [
          "Test-auth"
        ],
        "parameters": [],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    },
                    "userId": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true,
                      "description": "Authenticated user ID"
                    }
                  },
                  "required": [
                    "message",
                    "userId"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  }
}