name: Deploy to Cloudflare

on:
  workflow_run:
    workflows: ['CI']
    types: [completed]
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Cloudflare
    runs-on: ubuntu-latest
    # Only run if CI workflow succeeded or if manually triggered
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # For manual dispatch, we need to run the full build process
      - name: Full build process (manual dispatch only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm ci
          npm run db:generate
          npm run lint
          npm run type-check
          npm run test
          npx next-openapi-gen generate
          npx opennextjs-cloudflare build
        env:
          NODE_ENV: production

      # For workflow_run trigger, download artifacts from CI
      - name: Download build artifacts
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Verify build artifacts
        if: github.event_name == 'workflow_run'
        run: |
          echo "Verifying build artifacts..."
          ls -la
          echo "Checking .open-next directory:"
          ls -la .open-next/ || echo ".open-next directory not found"
          echo "Checking .open-next/worker.js:"
          ls -la .open-next/worker.js || echo "worker.js not found"

      - name: Install dependencies for deployment tools
        if: github.event_name == 'workflow_run'
        run: |
          # Only install dependencies needed for deployment
          npm ci --production=false
          npm run db:generate

      - name: Apply database migrations
        run: npm run db:migrate:deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy to Cloudflare
        run: npx opennextjs-cloudflare deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
